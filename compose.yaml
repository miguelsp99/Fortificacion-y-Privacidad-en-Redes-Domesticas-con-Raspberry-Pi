services:
  wg-easy:
    environment:
      # Change the server's hostname (clients will connect to):
      - WG_HOST=ejemploURLparaProyecto.duckdns.org

      # Change the Web UI Password:
      - PASSWORD=changeme

      # This is the Pi-Hole Container's IP Address
      - WG_DEFAULT_DNS=10.8.1.3
      - WG_DEFAULT_ADDRESS=10.8.0.x
    image: ghcr.io/wg-easy/wg-easy
    container_name: wg-easy
    volumes:
      - '~/.wg-easy:/etc/wireguard'
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      wg-easy:
        ipv4_address: 10.8.1.2

  pihole:
    image: pihole/pihole
    container_name: pihole
    environment:
      # Change the Web UI Password:
      - WEBPASSWORD=changeme
    volumes:
      - '~/.pihole/etc-pihole:/etc/pihole'
      - './pihole/.pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "5353:80/tcp"
    restart: unless-stopped
    networks:
      wg-easy:
        ipv4_address: 10.8.1.3

  duckdns:
    image: lscr.io/linuxserver/duckdns:latest
    container_name: duckdns
    network_mode: host #optional
    environment:
      - PUID=1000 #optional
      - PGID=1000 #optional
      - TZ=Europe/Madrid
      - SUBDOMAINS=ejemploURLparaProyecto #Cambiar por el Subdominio deseado
      - TOKEN=ejemploTOKENparaProyecto #Cambiar por el Token deseado
      - UPDATE_IP=ipv4 #optional
      - LOG_FILE=false #optional
    volumes:
      - './duckdns/config:/config' #optional
    restart: unless-stopped

# ELK Stack y FILEBEAT

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    environment: ['CLI_JAVA_OPTS=-Xms1g -Xmx1g','bootstrap.memory_lock=true','discovery.type=single-node','xpack.security.enabled=false', 'xpack.security.enrollment.enabled=false']
    ports:
      - 9200:9200
    networks:
      - elastic
    volumes:
      - ./elkStack/elasticsearch/database:/usr/share/elasticsearch/database
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          cpus: '1.0'
        reservations:
          cpus: '0.5'

  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.1
    container_name: kibana
    ports:
      - 5601:5601
    networks:
      - elastic
    deploy:
      resources:
        limits:
          cpus: '1.0'
        reservations:
          cpus: '0.5'
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.0.0
    container_name: filebeat
    user: root
#    volumes:
#      - './filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml'
    networks:
      - elastic
    command: filebeat -e -strict.perms=false
    depends_on:
      - elasticsearch
      - kibana

networks:
  wg-easy:
    ipam:
      config:
        - subnet: 10.8.1.0/24
  elastic:
